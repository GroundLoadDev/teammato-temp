name: Deploy frontend to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        working-directory: client
        run: npm ci

      - name: Build
        working-directory: client
        run: npm run build

      # 🔎 Robust detection of the build output
      - name: Detect dist path
        id: detect
        run: |
          echo "Tree (top-level):"; ls -la
          echo "Tree (client):"; ls -la client || true
          echo "Tree (client/dist):"; ls -la client/dist || true
          echo "Tree (dist):"; ls -la dist || true

          # Try common locations
          if [ -d "client/dist" ]; then
            echo "DIST_DIR=client/dist" >> "$GITHUB_ENV"
            exit 0
          fi
          if [ -d "client/dist/public" ]; then
            echo "DIST_DIR=client/dist/public" >> "$GITHUB_ENV"
            exit 0
          fi
          if [ -d "dist" ]; then
            echo "DIST_DIR=dist" >> "$GITHUB_ENV"
            exit 0
          fi
          if [ -d "dist/public" ]; then
            echo "DIST_DIR=dist/public" >> "$GITHUB_ENV"
            exit 0
          fi

          # Fallback: search for index.html inside any dist*
          FOUND=$(find . -type f -path "*/dist*/index.html" | head -n 1 || true)
          if [ -n "$FOUND" ]; then
            echo "Found index.html at: $FOUND"
            DIR=$(dirname "$FOUND")
            echo "DIST_DIR=$DIR" >> "$GITHUB_ENV"
            exit 0
          fi

          echo "❌ Build output not found. Check your Vite outDir."
          exit 1

      - name: SPA fallback (index -> 404)
        run: cp "${{ env.DIST_DIR }}/index.html" "${{ env.DIST_DIR }}/404.html"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.DIST_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
